version: 2.1

jobs:
  setup:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
    steps:
      - checkout
      - run: cp .circleci/database.yml config/database.yml
      - run: gem install bundler --conservative
      - restore_cache:
          keys:
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-
            - v1-gem-cache-{{ arch }}-
      - run: bundle install -j4 --path ~/bundle
      - save_cache:
          paths: ~/bundle
          key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

  specs:
    resource_class: medium
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
      - image: circleci/postgres:10-postgis
        environment:
          POSTGRES_DB: ohana_api_test
          POSTGRES_USER: root
          POSTGRES_HOST_AUTH_METHOD: trust
    environment:
      RAILS_ENV: test
      OHANA_API_ENDPOINT: http://ohana-api-test.herokuapp.com/api
    steps:
      - checkout
      - run: cp .circleci/database.yml config/database.yml
      - run: gem install bundler --conservative
      - restore_cache:
          keys:
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - v1-gem-cache-{{ arch }}-{{ .Branch }}-
            - v1-gem-cache-{{ arch }}-
      - run: bundle install -j4 --path ~/bundle
      - save_cache:
          paths: ~/bundle
          key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: RAILS_ENV=test bundle exec rake db:create db:schema:load
      - run: RAILS_ENV=test bundle exec rspec spec/ --tag '~skip_ci'

workflows:
  setup-and-test:
    jobs:
      - setup
      - specs:
          requires:
            - setup

