= render 'component/locations/detail/header', location: location

%section#detail-info{ itemscope: '', itemtype: 'http://schema.org/Organization' }

  %header
    %hgroup
      %h1.name
        = superscript_ordinals(full_name_content_for(location))
      - if location.organization.name && location.organization.name != location.name
        %h2.agency
          = link_to(locations_path(org_name: location.organization.name)) do
            %span
              = superscript_ordinals(location.organization.name)
      = render 'shared/covid_disclaimer'
      %p
        Last Updated: #{@location.updated_at.strftime("%B %d, %Y at %I:%M %p") }
      - if location.tags.present?
        %p
          Tags: #{location.tags.map{|tag| tag.name}.join(', ')}

  / detail sidebar content
  .location-sidebar-box
    %aside.location-sidebar
      %button.button-plain.favorite-toggle
      - if (location.fields & location_contact_fields).any?
        %section.contact-box-general.location-sidebar-section
          %h1 General Contact Info
          %section.location-sidebar-content
            = render 'component/detail/website', website: location.website
            = render 'component/detail/email', email: location.email

            - if location.phones.present?
              %section.phones.location-sidebar-content-group
                - location.phones.each do |phone|
                  = render 'component/detail/phone', phone: phone, show_phone_type_and_department: true

      - if location.contacts.present?
        - location.contacts.each do |contact|
          %section.contact-box-specific.location-sidebar-section
            %h1 Specific Contact
            %section.location-sidebar-content
              %section.contact-name-box.annotated-text-block
                %section.contact-name
                  = contact.name
                - if contact.title.present? || contact.department.present?
                  %section.contact-details.annotation
                    = contact_details_for(contact)

              = render 'component/detail/email', email: contact.email

              - if contact.phones.present?
                %section.phones.location-sidebar-content-group
                  - contact.phones.each do |phone|
                    = render 'component/detail/phone', phone: phone, show_phone_type_and_department: true

      - if location.address.present?
        %section.address-box.location-sidebar-section
          %h1 Physical Address
          %section.location-sidebar-content
            %section.address.icon-text-block
              %span
                = render 'component/detail/address', location: location, lines: 2
      - if location.regular_schedules.present?
        %section.schedules-box.location-sidebar-section
          %h1
          %section.location-sidebar-content
            = render 'component/detail/location_regular_schedule', schedules: location.regular_schedules
      - if location.holiday_schedules.present?
        %section.schedules-box.location-sidebar-section
          %h1 Holiday Hours
          %section.location-sidebar-content
            = render 'component/detail/location_holiday_schedule', schedules: location.holiday_schedules

      - if location.accessibility.present?
        %section.address-box.location-sidebar-section
          %h1= t('location_fields.accessibility')
          = render 'component/detail/accessibility', location: location

      - if location.file_uploads.present?
        %section.address-box.location-sidebar-section
          %h1= t('location_fields.file_uploads')
          = render 'component/detail/file_uploads', location: location

    - if false && @categories.present?
      %aside.location-sidebar
        %section.location-sidebar-section.service-categories-box
          %h1 Service Categories
          %section.location-sidebar-content
            %section.service-categories{ itemscope: '', itemtype: 'http://schema.org/Service' }
              %ul{ itemscope: '', itemtype: 'http://schema.org/serviceType' }
                - @categories.each do |category|
                  %li{ class: "hierarchy-depth-#{category.depth}" }
                    %span{ itemprop: 'serviceType' }
                      = category.name

      /= render 'component/detail/service_keywords'

  / Main detail content.
  %section.details-content
    %section.overview-box
      %section
        = render 'component/detail/location_short_desc', location: location
        = render 'component/detail/location_description', location: location

    - if location.coordinates.present? || location.transportation.present?
      %section.map-box
        %h1 Location

        %div

          - if location[:transportation].present?
            %section.transportation-availability
              %h1 Public Transit:
              %span
                = location.transportation

          - if location.coordinates.present?
            %section.map#detail-map-view
              #detail-map-canvas
                %span.hide#detail-map-canvas-title
                  = full_address_for(location.address)
                %span.hide#detail-map-canvas-lat
                  = location.latitude
                %span.hide#detail-map-canvas-lng
                  = location.longitude
              %noscript
                -# Hides map when JavaScript is disabled.
                :sass
                  #detail-map-view
                    display: none

    - if location.services.present?
      %section.services-box
        %h1 Services
        - location.services.each do |service|

          %section.service{ itemscope: '', itemtype: 'http://schema.org/Service' }
            %section.title-box
              = render 'component/detail/service_status', service: service
              = render 'component/detail/service_name', service: service


            = render 'component/detail/service_description', service: service
            = render 'component/detail/service_wait', service: service
            = render 'component/detail/service_phone', service: service
            = render 'component/detail/service_hours', service: service
            = render 'component/detail/service_address_details', service: service
            = render 'component/detail/service_fees', service: service
            = render 'component/detail/service_audience', service: service
            = render 'component/detail/service_eligibility', service: service
            = render 'component/detail/service_application_process', service: service
            = render 'component/detail/languages', service: service
            = render 'component/detail/service_interpretation_services', service: service
            = render 'component/detail/service_required_documents', service: service
            = render 'component/detail/service_accepted_payments', service: service
            = render 'component/detail/service_service_areas', service: service
            = render 'component/detail/service_address_details', service: service
            = render 'component/detail/service_situations', service: service
            = render 'component/detail/service_categories', service: service
            = render 'component/detail/service_website', service: service


    / Detail footer content.
    - if location.updated_at.present?

      %footer.details-footer
        %section.metadata
          .button-edit
            = link_to "#{ENV['OHANA_ADMIN_ENDPOINT']}/locations/#{location.slug}", rel: 'nofollow' do
              %i.fa.fa-pencil
              Edit
:javascript
  $(document).ready(function(){

    // set favorite button to favorite or unfavorite
    function favoriteButton () {
      $('.favorite-toggle').html('').html('Favorite').removeClass(unfavoriteText).addClass(favoriteText).data('favorite', false);
    };

    function unfavoriteButton() {
      $('.favorite-toggle').html('').html('Unfavorite').removeClass(favoriteText).addClass(unfavoriteText).data('favorite', true);
    };

    var favorite = #{@favorite};

    if(favorite){
      unfavoriteButton();
    } else {
      favoriteButton();
    }

    var userId = #{@current_user_id};
    var locationId = #{@location.id};
    var locationName = "#{@location.name}";
    var locationUrl = "#{@location.url}";
    var favoriteText = "favorite";
    var unfavoriteText = "unfavorite";
    var favoriteURL = '/api/favorite.json';
    var favoriteToggle = $('.favorite-toggle');

    $('.favorite-toggle').on('click', function(e){
      e.preventDefault();

      if(userId === 0){
        alert("Please login or signup to favorite this location");
        return;
      }

      if ($(e.target).data('favorite')) {
        // Location already favorited
        // Send ajax call
        $.ajax({
          type: "DELETE",
          url: favoriteURL,
          data: {
            favorite: {
              resource_id: locationId,
              resource_type: "location",
              user_id: userId,
              name: locationName,
              url: locationUrl
            }
          },
          success: function(data){
            console.log('data')
            console.log(data)
            // if success
            // change button to "favorite"
            favoriteButton();
          }
        });
      } else {
        $.ajax({
          type: "POST",
          url: favoriteURL,
          data: {
            favorite: {
              resource_id: locationId,
              resource_type: "location",
              user_id: userId,
              name: locationName,
              url: locationUrl
            }
          },
          success: function(data){
            unfavoriteButton();
          }
        });
      }
    });
  });

  var _printButton;

  function initPrintButton() {
    _printButton = document.querySelector('.button-print');
    // Set event on print button and show the button.
    _printButton.addEventListener('click', _clickPrintButton, false);
    _printButton.classList.remove('hide');
  }

  // Issue print command when print button is clicked.
  // @param evt [Object] The click event object.
  function _clickPrintButton(evt) {
    evt.preventDefault();

    var originalContents = document.body.innerHTML;
    document.querySelector('.favorite-toggle').remove();
    document.querySelector('.button-edit').remove();
    document.querySelector('.map-box').remove();

    var printContents = document.querySelector('#detail-info').innerHTML;

    document.body.innerHTML = printContents;

    window.print();

    document.body.innerHTML = originalContents;
    initPrintButton()
  }

  initPrintButton()